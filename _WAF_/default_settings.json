{
    "Compiler Detection": [
        {
            "description": "Automatically detect and use installed compiler instead of bootstrapped version",
            "default_value": "True",
            "long_form": "--auto-detect-compiler",
            "attribute": "auto_detect_compiler"
        },
        {
            "description": "Output verbose information when performing compiler auto-detection",
            "default_value": "False",
            "long_form": "--auto-detect-verbose",
            "attribute": "auto_detect_verbose"
        },
        {
            "description": "The version ID of the compiler to use or 'auto' to pick automatically\n(--auto-detect-verbose will show valid values on this system)",
            "default_value": "auto",
            "long_form": "--force-msvc",
            "attribute": "force_msvc"
        },
        {
            "description": "The version ID of the Windows SDK to use or 'auto' to pick automatically\n(--auto-detect-verbose will show valid values on this system)",
            "default_value": "auto",
            "long_form": "--force-winsdk",
            "attribute": "force_winsdk"
        },
        {
            "description": "Minimum version of the MSVC compiler to search for during auto-detection",
            "default_value": "11",
            "long_form": "--minimum-msvc-compiler",
            "attribute": "minimum_msvc_compiler"
        }
    ],
    "Visual Studio Project Generator": [
        {
            "description": "Automatically generate Visual Studio Projects/Solutions",
            "default_value": "True",
            "long_form": "--generate-vs-projects-automatically",
            "attribute": "generate_vs_projects_automatically"
        },
        {
            "description": "Name of the generated solution",
            "default_value": "CRYENGINE",
            "long_form": "--visual-studio-solution-name",
            "attribute": "visual_studio_solution_name"
        },
        {
            "description": "Name of the folder in which the generated solution should be stored",
            "default_value": "Solutions",
            "long_form": "--visual-studio-solution-folder",
            "attribute": "visual_studio_solution_folder"
        },
        {
            "description": "List of specs to include in solution generation",
            "default_value": "gamesdk,gamesdk_server,gamesdk_and_tools",
            "long_form": "--specs-to-include-in-project-generation",
            "attribute": "specs_to_include_in_project_generation"
        }
    ],
    "Misc Options": [
        {
            "description": "Number of parallel processes for local builds",
            "default_value": "8",
            "long_form": "--max-cores",
            "attribute": "max_cores"
        },
        {
            "description": "Enable support for Recode",
            "default_value": "True",
            "long_form": "--support-recode",
            "attribute": "support_recode"
        }
    ],
    "Incredibuild Options": [
        {
            "description": "Use Incredibuild",
            "default_value": "True",
            "short_form": "-i",
            "long_form": "--use-incredibuild",
            "attribute": "use_incredibuild"
        },
        {
            "description": "Use Incredibuild for PC Builds",
            "default_value": "True",
            "long_form": "--use-incredibuild-win",
            "attribute": "use_incredibuild_win"
        },
        {
            "description": "Use Incredibuild for Durango Builds",
            "default_value": "True",
            "long_form": "--use-incredibuild-durango",
            "attribute": "use_incredibuild_durango"
        },
        {
            "description": "Use Incredibuild for Orbis Builds",
            "default_value": "True",
            "long_form": "--use-incredibuild-orbis",
            "attribute": "use_incredibuild_orbis"
        },
        {
            "description": "Control number of processes spawned by Incredibuild",
            "default_value": "128",
            "long_form": "--incredibuild-max-cores",
            "attribute": "incredibuild_max_cores"
        }
    ],
    "Build Options": [
        {
            "description": "Version to embed in final build outputs",
            "default_value": "3.7.0.0",
            "long_form": "--force-version",
            "attribute": "version"
        },
        {
            "description": "Generate a Build containing Debug Info",
            "default_value": "True",
            "long_form": "--generate-debug-info",
            "attribute": "generate_debug_info"
        },
        {
            "description": "Generate a Map file during linking if the platform supports it",
            "default_value": "False",
            "long_form": "--generate-map-file",
            "attribute": "generate_map_file"
        },
        {
            "description": "Use Precompiled Header for compilation",
            "default_value": "True",
            "long_form": "--use-precompiled-header",
            "attribute": "use_precompiled_header"
        },
        {
            "description": "Use UberFiles for compilation",
            "default_value": "True",
            "long_form": "--use-uber-files",
            "attribute": "use_uber_files"
        },
        {
            "description": "Use static code analyzer if supported by compiler (potentially slows down compilation)",
            "default_value": "False",
            "long_form": "--use-static-code-analyzer",
            "attribute": "use_static_code_analyzer"
        }
    ],
    "Bootstrap Support": [
        {
            "description": "Should Bootstrap be executed by WAF (based on a timestamp file)",
            "default_value": "False",
            "long_form": "--run-bootstrap-automatically",
            "attribute": "auto_run_bootstrap"
        },
        {
            "description": "Name of the bootstrap.dat file to use for bootstrapping",
            "default_value": "bootstrap.dat",
            "long_form": "--bootstrap_dat",
            "attribute": "bootstrap_dat_file"
        },
        {
            "description": "Perforce Server name for Workspace",
            "default_value": "perforce:1666",
            "long_form": "--p4host",
            "attribute": "p4host"
        },
        {
            "description": "Perforce User name for Workspace",
            "long_form": "--p4user",
            "attribute": "p4user"
        },
        {
            "description": "Perforce Workspace name",
            "long_form": "--p4client",
            "attribute": "p4client"
        },
        {
            "description": "Perforce Server name for 3rdParty Workspace",
            "default_value": "perforce:1666",
            "long_form": "--3rdparty-p4host",
            "attribute": "third_party_p4host"
        },
        {
            "description": "Perforce User name for 3rdParty Workspace",
            "long_form": "--3rdparty-p4user",
            "attribute": "third_party_p4user"
        },
        {
            "description": "Perforce 3rdParty Workspace name",
            "long_form": "--3rdparty-p4client",
            "attribute": "third_party_p4client"
        },
        {
            "description": "Root folder for 3rdParty workspace",
            "default_value": "",
            "long_form": "--3rdparty-rootfolder",
            "attribute": "third_party_rootfolder"
        }
    ],
    "Output Folder": [
        {
            "description": "Addition output extension to the platforms debug binary output folder (optional)",
            "default_value": "",
            "long_form": "--output-extension-debug",
            "attribute": "output_extension_debug"
        },
        {
            "description": "Addition output extension to the platforms profile binary output folder (optional)",
            "default_value": "",
            "long_form": "--output-extension-profile",
            "attribute": "output_extension_profile"
        },
        {
            "description": "Addition output extension to the platforms performance binary output folder (optional)",
            "default_value": "_performance",
            "long_form": "--output-extension-performance",
            "attribute": "output_extension_performance"
        },
        {
            "description": "Addition output extension to the platforms release binary output folder (optional)",
            "default_value": "_release",
            "long_form": "--output-extension-release",
            "attribute": "output_extension_release"
        },
        {
            "description": "Absolute or relative Win32 build output path",
            "default_value": "bin/win_x86",
            "long_form": "--output-folder-win32",
            "attribute": "out_folder_win32"
        },
        {
            "description": "Absolute or relative Win64 build output path",
            "default_value": "bin/win_x64",
            "long_form": "--output-folder-win64",
            "attribute": "out_folder_win64"
        },
        {
            "description": "Absolute or relative Durango build output path",
            "default_value": "bin/durango",
            "long_form": "--output-folder-durango",
            "attribute": "out_folder_durango"
        },
        {
            "description": "Absolute or relative Orbis build output path",
            "default_value": "bin/orbis",
            "long_form": "--output-folder-orbis",
            "attribute": "out_folder_orbis"
        },
        {
            "description": "Absolute or relative Linux32 gcc build output path",
            "default_value": "bin/linux_x86_gcc",
            "long_form": "--output-folder-linux32-gcc",
            "attribute": "out_folder_linux32_gcc"
        },
        {
            "description": "Absolute or relative Linux64 gcc build output path",
            "default_value": "bin/linux_x64_gcc",
            "long_form": "--output-folder-linux64-gcc",
            "attribute": "out_folder_linux64_gcc"
        },
        {
            "description": "Absolute or relative Linux32 clang build output path",
            "default_value": "bin/linux_x86_clang",
            "long_form": "--output-folder-linux32-clang",
            "attribute": "out_folder_linux32_clang"
        },
        {
            "description": "Absolute or relative Linux64 clang build output path",
            "default_value": "bin/linux_x64_clang",
            "long_form": "--output-folder-linux64-clang",
            "attribute": "out_folder_linux64_clang"
        },
        {
            "description": "Absolute or relative Darwin32 build output path",
            "default_value": "bin/darwin_x86",
            "long_form": "--output-folder-darwin32",
            "attribute": "out_folder_darwin32"
        },
        {
            "description": "Absolute or relative Darwin64 build output path",
            "default_value": "bin/darwin_x64",
            "long_form": "--output-folder-darwin64",
            "attribute": "out_folder_darwin64"
        },
        {
            "description": "Absolute or relative Android build output path",
            "default_value": "bin/android_arm_gcc",
            "long_form": "--output-folder-android",
            "attribute": "out_folder_android"
        }
    ]
}