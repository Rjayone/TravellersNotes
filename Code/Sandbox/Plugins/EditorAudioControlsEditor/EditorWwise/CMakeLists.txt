set(THIS_PROJECT EditorCryAudioImplWwise)

project( ${THIS_PROJECT} )


#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

set (SourceGroup_Root
	AudioConnectionInspectorPanel_wwise.cpp
	AudioConnectionInspectorPanel_wwise.h
	AudioSystemControl_wwise.cpp
	AudioSystemControl_wwise.h
	AudioSystemEditor_wwise.cpp
	AudioSystemEditor_wwise.h
	AudioWwiseLoader.cpp
	AudioWwiseLoader.h
	StdAfx.cpp
	StdAfx.h
	main.cpp
)


set (SourceGroup_qt
	../common/IAudioSystemEditor.cpp
	../common/IAudioSystemEditor.h
)
source_group("qt" FILES ${SourceGroup_qt})


set (SourceGroup_ui
	EditorWwise.qrc
)
source_group("ui" FILES ${SourceGroup_ui})


# Support unity build with uber files
set(EditorWwise_uber_0_cpp ${SourceGroup_Root} ${SourceGroup_qt}  )
enable_unity_build( "EditorWwise_uber_0.cpp" EditorWwise_uber_0_cpp )

set(NoUberFile ${SourceGroup_ui}  )


set (SOURCES
	${EditorWwise_uber_0_cpp}
	${NoUberFile}
)
#END-FILE-LIST

# Enable use MFC as Shared Library
set(CMAKE_MFC_FLAG 2)

include_directories( ../common )
include_directories( ../../../Editor )
include_directories( ../../../Editor/Include )
include_directories( ../../EditorCommon )

# Common macro for enable QT5 CMake specific settings
custom_enable_QT5()

add_definitions(-DNOT_USE_CRY_MEMORY_MANAGER)
add_definitions(-DPLUGIN_EXPORTS)
add_definitions(-DSANDBOX_IMPORTS)
add_definitions(-DEDITOR_COMMON_IMPORTS)
add_definitions(/EHsc)

add_library( ${THIS_PROJECT} ${SOURCES})

target_link_libraries(${THIS_PROJECT} EditorCommon)

# Use the Widgets module from Qt 5.
target_link_libraries(${THIS_PROJECT} Qt5::Widgets)

SET_PLATFORM_TARGET_PROPERTIES( ${THIS_PROJECT} )
